
if (type == '<<apply overpayment>>'){
btnApplyDisabled = false
btnClientRefundDisabled = true
btnTransferDisabled = true
}elseif (type == '<<Client Refund>>'){
btnApplyDisabled = true
btnClientRefundDisabled = false
btnTransferDisabled = true
}elseif (type == '<<Transfer OP>>'){
btnApplyDisabled = true
btnClientRefundDisabled = true
btnTransferDisabled = false
}else{
btnApplyDisabled = false
btnClientRefundDisabled = false
btnTransferDisabled = false
}


int day = 4;
switch (day) 
{
  case 1:
    Console.WriteLine("Monday");
    break;
  case 2:
    Console.WriteLine("Tuesday");
    break;
  case 3:
    Console.WriteLine("Wednesday");
    break;
  case 4:
    Console.WriteLine("Thursday");
    break;
  case 5:
    Console.WriteLine("Friday");
    break;
  case 6:
    Console.WriteLine("Saturday");
    break;
  case 7:
    Console.WriteLine("Sunday");
    break;
}


switch (i) {
case 0:
   CaseZero();
   goto case 1;
case 1:
   CaseZeroOrOne();
   goto default;
default:
   CaseAny();
   break;
}



C Sharp 6.0 has introduced a nice new way to do this:

 public bool YourBool { get; set; } = true;
This is equivalent to the old way of:

    private bool _yourBool = true;

    public bool YourBool 
    {
        get { return _yourBool; }
        set { _yourBool = value; }
    }
